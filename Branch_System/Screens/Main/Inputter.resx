<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Issue_BTN.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAD0YAAA9GAWhTIIIAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADxklEQVR4Xu2a2U9TQRTGm/g3qN1EQ3ABlVCNxhfwRUVRIolxiWsUkBhT0ahxeXBBFAgqSIIPimIU
        MeADGgkPSmIEarBGoBCNBMGNIrhQutBCQnKcufReupxe9EF79fTh1/R+c2am52vnzDQZFQCQBhUpgYqU
        QEVKoCIlUJESqEgJVKTExEO1aoqjSTvXZtIl/M/wHHmufgbYGnWHh5p0LgYQwcVzFgywNWr3IAEk4Lmr
        2Jv2wAZCtHMDxgJESoxxA7AGMqgqLyYDZVRnsncCZSIGYCIlIgZgIiUiBmAiJSIGdNXOA8pEjsKYSImI
        AZhIiRAG6MHxKgmcbSmT4mhZAUOmmVJf+4t4NC6YNWBvjvWZMzygBjgtqTD69cEvM/x233hf0ywY7a9G
        YzBGrDeC5v7boAbYzYvA8/kqjHy5MznWMnC2rpT6urtP4XGB9N2G4U6j37zhIFIDMJESEQMw0f5iIbjf
        54Ln4yVWENdJuuv1dvB8KmIUg7snh1Xx+ePxz2PY2j8ttPEYMZ735WPweM+HPHC8XOJt08Nw1xEWu0uK
        DReoAU5LmlSp3e/PSfpI7zW/Ku5sWyvojleJksZjxHje1zfe9Wa3oNub49hzDSuE5VJsuMCXgClK+Pac
        HRuFDyvqdrMBXB2bGVuEvXzINMPbpmc7QbLQxmOkeNaXjyHEW9YL26TYxk2zmxdLz3LY6nXw7boG+k6o
        wXpIDQMlGhis1Urt7x7HwsOKZMgrzoCS0h1QX70c+p5G+40RCsXXgIFCDbxbOBW6ogOImQofjHrIKcyC
        ObvuQczOKj8WZZZD1a1UdExfFG1Ab+b04MS9tM/Ww4oNRUGJB3I8PxsdW0SxBgxc0aCJixxYZUQTxnhQ
        sRqdg6NMAxp00G2YhibOqYtfjCYaiqVZZTDYKNYrfxRpwPcqLZq4SH7iFjRROVoe4QVXkQb0F8j//DPX
        HEWTlKOynO1CyFzKNCBP3oA9KcfQJOW4czMNnUuZS6BSfglcSNqKJimH+aF4CvVHmUXwGTvcLMCT59Qk
        LEOTDIUh4xZ8b4hC51KmAYz+fPllkPEbdeDuTXz9cxRrAOfTttAHodY5MyFxUymasC/7c46hY4so2oCh
        Rh18OcuOwnG4CZ3pUXA09yCaeHz6bSi7thFs7H8KOrYXZRvgZbBOK5wMrdlq6M1SC8vjx/2JP0OWWgNU
        sCp/ssAI5y/vhRp28ut5MtdvjFD8Ewb8SbgB5K/J0b4oSf6qLPnL0vxFgPJ1ecqgIiVQkRKoSAlUpAQq
        UgIVKYGKdADVTzbCvK0Fh4liAAAAAElFTkSuQmCC
</value>
  </data>
</root>