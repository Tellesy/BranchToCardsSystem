<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Reports_BTN.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jAAAAABJRU5ErkJggg==
</value>
  </data>
</root>